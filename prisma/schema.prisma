datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password   Password?
  statements Statement[]
  invoices   Invoice[]
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Statement {
  id           Int           @id @default(autoincrement())
  date         DateTime
  year         Int
  User         User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       String
  transactions Transaction[]
}

model Transaction {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Statement   Statement @relation(fields: [statementId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  statementId Int
  amount      Decimal
  invoiceId   Int
  invoice     Invoice   @relation(fields: [invoiceId], references: [id])
}

model Invoice {
  id          Int           @id @default(autoincrement())
  title       String
  category    String        @default("income") // income | expense | saving
  state       String        @default("active") // active | archived
  frequency   String        @default("bi-weekly") // 'bi-weekly' | 'monthly' | 'bi-monthly' | 'quaterly' | 'one-off'
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  externalUrl String?
  Transaction Transaction[]
}
